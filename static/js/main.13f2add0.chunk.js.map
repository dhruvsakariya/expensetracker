{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/Header.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionList.js","components/AddNewTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalState","props","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","children","Balance","total","useContext","map","reduce","acc","item","toFixed","Header","IncomeExpense","amounts","income","expense","className","Transaction","sign","Math","abs","onClick","TransactionList","AddNewTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","event","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13f2add0.chunk.js","sourcesContent":["const AppReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default AppReducer;","import React, { useReducer, createContext } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n  transactions: [\r\n    { id: 1, text: \"Flower\", amount: -20 },\r\n    { id: 2, text: \"Salary\", amount: 300 },\r\n    { id: 3, text: \"Book\", amount: -10 },\r\n    { id: 4, text: \"Camera\", amount: 150 },\r\n  ],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState); // Context api\r\n\r\nconst GlobalState = (props) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Reducer function\r\n\r\n  // Actions\r\n\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const addTransaction = (transaction) => {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\nexport default GlobalState;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1 id=\"balance\">${total}</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h2>Expense Tracker <sub>dhruv sakariya</sub></h2>;\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nconst IncomeExpense = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p id=\"money-plus\" className=\"money plus\">\r\n          +${income}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p id=\"money-minus\" className=\"money minus\">\r\n          -${expense}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpense;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Transaction = ({ transaction }) => {\r\n const { deleteTransaction } = useContext(GlobalContext)\r\n const sign = transaction.amount < 0 ? '-' : '+';\r\n return (\r\n  <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n   {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n   <button className=\"delete-btn\" onClick={() => {\r\n    deleteTransaction(transaction.id)\r\n   }}>x</button>\r\n  </li>\r\n );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Transaction from \"./Transaction\";\r\nconst TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddNewTransaction = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 10000000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n\r\n    addTransaction(newTransaction);\r\n    setAmount(null)\r\n    setText('')\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form id=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            id=\"text\"\r\n            onChange={(event) => {\r\n              setText(event.target.value);\r\n            }}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            id=\"amount\"\r\n            onChange={(event) => {\r\n              setAmount(event.target.value);\r\n            }}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewTransaction;\r\n","import React from \"react\";\nimport Balance from \"./components/Balance\";\nimport Header from \"./components/Header\";\nimport IncomeExpense from \"./components/IncomeExpense\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddNewTransaction from \"./components/AddNewTransaction\";\nimport GlobleState from \"./context/GlobalState\";\nfunction App() {\n\n  return (\n    <GlobleState>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddNewTransaction />\n      </div>\n    </GlobleState>\n    // Taksh gadhiya\n    // dhruv sakariya\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}